# Generated by Django 4.2.2 on 2023-07-28 15:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userTipoDoc', models.CharField(choices=[('TI', 'Tarjeta Identidad'), ('CC', 'Cedula Ciudadania'), ('CCE', 'Cedula Extranjera')], db_comment='Tipo de Documento', max_length=8)),
                ('userNoDoc', models.IntegerField(db_comment='Numero de documento', null=True, unique=True)),
                ('userTelefono', models.IntegerField(db_comment='Telefono del usuario', null=True)),
                ('userFoto', models.FileField(blank=True, db_comment='Foto del Usuario', null=True, upload_to='fotos/')),
                ('userTipo', models.CharField(choices=[('Usuario', 'Usuario'), ('Empleado', 'Empleado'), ('Administrador', 'Administrador')], db_comment='Nombre Tipo de usuario', max_length=15)),
                ('userCodigo', models.IntegerField(db_comment='Codigo Recuperacion', null=True, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catNombre', models.CharField(db_comment='Nombre de la categoria', max_length=30, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Contactanos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conNombre', models.CharField(db_comment=' Nombre De La Persona Que Se Va Contactar', max_length=50)),
                ('conEmail', models.CharField(db_comment='Direccion del correo electronico', max_length=30)),
                ('conNumeroTe', models.IntegerField(db_comment='Telefono del usuario Que Se Contacta', null=True)),
                ('conMensaje', models.CharField(db_comment='Mensaje Que El Usuario enviar para contartacnos', max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detCantida', models.IntegerField(db_comment='Cantidad del producto')),
                ('detPrecio', models.IntegerField(db_comment='Precio por cada producto')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
            ],
        ),
        migrations.CreateModel(
            name='DetellaEnvio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detNombreDestinatario', models.CharField(db_comment='Nombre de aquien se envia', max_length=40)),
                ('detNitDestinatario', models.IntegerField(db_comment='tipo de documento a quien se envia')),
                ('detDescripcion', models.TextField(db_comment='Descripcion del envio', max_length=200)),
                ('detTelefonoDestinatario', models.IntegerField(db_comment='Telefono del quien recibe')),
                ('detCorreoDestinatario', models.CharField(db_comment='correo del destinatario', max_length=30)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emNombre', models.CharField(db_comment='Nombres Completos del empleado', max_length=40)),
                ('emApellido', models.CharField(db_comment='Apellidos Completos del empleado', max_length=40)),
                ('emTelefono', models.IntegerField(db_comment='Numero telefonico del empleado')),
                ('emDireccion', models.CharField(db_comment='Direccion de residencia', max_length=40)),
                ('emTipoDoc', models.CharField(db_comment='Tipo de identificacion', max_length=5)),
                ('emNumeroDoc', models.IntegerField(db_comment='Numero de identificacion', unique=True)),
                ('emCargo', models.CharField(db_comment='Nombre del cargo que ejerce', max_length=30)),
                ('emCorreo', models.CharField(db_comment='Direccion del correo electronico', max_length=48, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='FormaDePago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forNombre', models.CharField(db_comment='Nombre de la forma de pago', max_length=40, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proNombre', models.CharField(db_comment='Nombre de la empresa', max_length=40)),
                ('proRepresentante', models.CharField(db_comment='Nombre del representante legar de la empresa', max_length=40)),
                ('proDireccion', models.CharField(db_comment='Direccion de la empresa', max_length=40)),
                ('proTelefono', models.IntegerField(db_comment='Telefono de la empresa')),
                ('proNit', models.IntegerField(db_comment='NIT de la empresa')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('traNombre', models.CharField(db_comment='Nombre del tratamiento', max_length=30, unique=True)),
                ('traTipo', models.CharField(db_comment='Tipo de tratamiento, si es cirugia, revision', max_length=40)),
                ('traPrecio', models.IntegerField(db_comment='Precio del Tratamiento')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('traEmpleado', models.ForeignKey(db_comment='El empleado que atiende este servicio', null=True, on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proNombre', models.CharField(db_comment=' Nombre del prooducto', max_length=50)),
                ('proEstado', models.CharField(choices=[('Bueno', 'Bueno'), ('Regular', 'Regular'), ('Vencido', 'Vencido'), ('Eliminado', 'Eliminado')], db_comment='Estado del produco', max_length=20)),
                ('proPrecio', models.IntegerField(db_comment='Precio del producto')),
                ('proFoto', models.FileField(blank=True, db_comment='Foto del Producto', null=True, upload_to='fotos/')),
                ('proDescripcion', models.TextField(db_comment='Descripcion del producto', max_length=600)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraCaducidad', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('proCategoria', models.ForeignKey(db_comment='Categoria', on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.categoria')),
                ('proProveedor', models.ForeignKey(db_comment='Proveedor', on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.proveedor')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peEstado', models.CharField(choices=[('Enviado', 'Enviado'), ('Entregado', 'Entregado'), ('Solicitado', 'Solicitado'), ('Rechazado', 'Rechazado'), ('Cancelado', 'Cancelado')], db_comment='estado del pedido', max_length=10)),
                ('peCodigoComprobante', models.IntegerField(db_comment='Codigo del comprobante')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('peImpuestoPedido', models.IntegerField(db_comment='Impuesto del pedido', null=True)),
                ('peTotalPedido', models.IntegerField(db_comment='Total pedido', null=True)),
                ('proFotoComprobante', models.FileField(blank=True, db_comment='Foto del comprobante', null=True, upload_to='fotos/')),
                ('peDetEnvio', models.ForeignKey(db_comment='Detalle ENVIO', on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.detellaenvio')),
                ('peDetPedido', models.ForeignKey(db_comment='Detalle envio', on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.detallepedido')),
                ('peFormaPago', models.ForeignKey(db_comment='Forma de pago', on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.formadepago')),
                ('peUsuario', models.ForeignKey(db_comment='Usuario que hizo el pedido', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('masNombre', models.CharField(db_comment='Nombre de la mascota', max_length=20)),
                ('masFoto', models.FileField(blank=True, db_comment='Foto de la mascota', null=True, upload_to='fotos/')),
                ('masRaza', models.CharField(db_comment='Raza de la mascota', max_length=30, null=True)),
                ('masTipoAnimal', models.CharField(db_comment='Tipo del animal. Gato, perro etc', max_length=30, null=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('masUser', models.ForeignKey(db_comment='Usuario al que pertenece la mascota', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='detallepedido',
            name='detProducto',
            field=models.ForeignKey(db_comment='Producto', on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.producto'),
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ciDescripcion', models.TextField(db_comment='Descripcion de la cita despues de ser atendida', max_length=500, null=True)),
                ('ciSintomas', models.CharField(db_comment='sintomas de la mascota', max_length=50)),
                ('ciEstado', models.CharField(choices=[('Solicitada', 'Solicitada'), ('Atendida', 'Atendida'), ('Cancelada', 'Cancelada')], db_comment='Estado de la cita', max_length=20)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('ciMascota', models.ForeignKey(db_comment='Macota', null=True, on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.mascota')),
                ('ciTratamiento', models.ForeignKey(db_comment='Tratmiento', null=True, on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.tratamiento')),
                ('ciUsuario', models.ForeignKey(db_comment='Usuario', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='userEmpleado',
            field=models.ForeignKey(db_comment='id del empleado, solo si el empleado tiene un usuario', null=True, on_delete=django.db.models.deletion.PROTECT, to='appVeterinaria.empleado'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
